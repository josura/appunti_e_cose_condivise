# Clear console
cat("\014")  # ctrl+L
library(datasets)  # Load/unload base packages manually
head(iris)
plot(iris$Species)  # Categorical variable
plot(cos, 0, 2*pi)
plot(exp, 1, 5)
plot(dnorm, -3, +3)
library(datasets)
?mtcars
head(mtcars)
install.packages(tidyverse)
install.packages("tidyverse")
library(ggplot2)
ggplot(data = mpg)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y=hwy))
par(mfw=c(2,1))
par(mfrow=c(2,1))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y=hwy))
plot(displ,hwy)
plot(displ,hwy, data = mpg)
par(mfrow=c(1,1))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ, y=hwy))
ggplot(data = Boston)
library(MASS)
ggplot(data = Boston)
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv))
lm.fit=lm(medv~lstat,data = Boston)
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv)) +
geom_abline(lm.fit)
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv)) +
geom_abline(mapping = aes(lm.fit))
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv))
View(lm.fit)
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv))
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv)) +
geom_abline(mapping = aes(34.55,-0.95))
ggplot(data = Boston) +
geom_point(mapping = aes(lstat,medv)) +
geom_abline(mapping = aes(x = 34.55,y = -0.95))
ggplot(data = Boston) +
geom_point(mapping = aes(x = lstat, y = medv, color = class)) +
geom_abline(slope = -0.95,intercept = 34.55)
ggplot(data = Boston) +
geom_point(mapping = aes(x = lstat, y = medv)) +
geom_abline(slope = -0.95,intercept = 34.55)
names(Boston)
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ,y=hwy,color = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ,y=hwy,shape = class))
geom_point(mapping = aes(x=displ,y=hwy,size = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x=displ,y=hwy,size = class))
library(datasets)
?iris
head(iris)
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Length)
hist(iris$Petal.Width)
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
# Restore graphic parameter
par(mfrow=c(1, 1))
?mtcars
head(mtcars)
# Good to first check univariate distributions
hist(mtcars$wt)
hist(mtcars$mpg)
# Basic X-Y plot for two quantitative variables
plot(mtcars$wt, mtcars$mpg)
# Annual Canadian Lynx trappings 1821-1934
?lynx
head(lynx)
# Default
hist(lynx)
# Add some options
hist(lynx,
breaks = 14,          # "Suggests" 14 bins
freq   = FALSE,       # Axis shows density, not freq.
col    = "thistle1",  # Color for histogram
main   = paste("Histogram of Annual Canadian Lynx",
"Trappings, 1821-1934"),
xlab   = "Number of Lynx Trapped")
# Add a normal distribution
curve(dnorm(x, mean = mean(lynx), sd = sd(lynx)),
col = "thistle4",  # Color of curve
lwd = 2,           # Line width of 2 pixels
add = TRUE)        # Superimpose on previous graph
# Add two kernel density estimators
lines(density(lynx), col = "blue", lwd = 2)
lines(density(lynx, adjust = 3), col = "purple", lwd = 2)
# Add a rug plot
rug(lynx, lwd = 2, col = "gray")
lm.fit= lm(formula = medv~Boston.*)
lm.fit= lm(formula = medv~.)
lm.fit= lm(formula = medv~.,data = Boston)
summary(lm.fit)
ggplot(data = Boston) +
geom_point(mapping = aes(medv,lstat))
lm.fitlstat1=lm(formula = medv~lstat,data = Boston)
ggplot(data = Boston) +
geom_point(mapping = aes(medv,lstat)) +
geom_abline(slope = lm.fitlstat1$coefficients[1],intercept = lm.fitlstat1$coefficients[0])
lm.fitlstat1$coefficients[1]
lm.fitlstat1$coefficients[2]
lm.fitlstat1$coefficients[0]
ggplot(data = Boston) +
geom_point(mapping = aes(medv,lstat)) +
geom_abline(slope = lm.fitlstat1$coefficients[2],intercept = lm.fitlstat1$coefficients[1])
lm.fitlstat2=lm(formula = medv~lstat+I(lstat^2),data = Boston)
ggplot(data = Boston) +
geom_point(mapping = aes(medv,lstat)) +
geom_abline(slope = lm.fitlstat1$coefficients[2],intercept = lm.fitlstat1$coefficients[1]) +
geom_curve(mapping = aes(x=lstat,y=lstat^2,color= "red"))
ggplot(data = Boston) +
geom_point(mapping = aes(medv,lstat)) +
geom_abline(slope = lm.fitlstat1$coefficients[2],intercept = lm.fitlstat1$coefficients[1]) +
geom_smooth(method = lm.fitlstat2, color="yellow")
g=ggplot(Boston,aes(x=lstat,y=medv))
g + geom_point(mapping = aes(shape=cy))
g + geom_point(mapping = aes(shape=cyl))
g + geom_point(mapping = aes(shape="x"))
g + geom_point(
s
dfs)
g + geom_point()
g
g + geom_point()
g + geom_smooth(method = lm.fitlstat1, se = FALSE)
g + geom_smooth(method = lm, se = FALSE)
g + geom_smooth(method = lm.fitlstat1, se = FALSE) + geom_point()
g + geom_point() + geom_smooth(method = lm.fitlstat1, se = FALSE)
g + geom_smooth(method = lm) + geom_point()
g + geom_smooth() + geom_point()
g + geom_smooth(formula = medv~lstat) + geom_point()
g + geom_smooth(method = lm,formula = medv~lstat) + geom_point()
g + geom_smooth(method = lm,formula = y~lstat) + geom_point()
g + geom_smooth(method = lm,formula = y~) + geom_point()
g + geom_smooth(method = lm,formula = y~x) + geom_point()
g + geom_smooth(method = lm,formula = y~x+I(x^2)) + geom_point()
lm.fit
summary(lm.fit)
library(plotly)
install.packages("plotly")
install.packages("Rtools")
library(plotly)
ploitlu
plot_ly(data = Boston,x=lstat,y=age,z=medv,type = "scatter3d")
plot_ly(data = Boston,x=Boston$lstat,y=age,z=medv,type = "scatter3d")
plot_ly(data = Boston,x=Boston$lstat,y=Boston$age,z=Boston$medv,type = "scatter3d")
plot_ly(data = Boston,x=Boston$lstat,y=Boston$age,z=Boston$medv,type = "scatter3d",mode="markers")
